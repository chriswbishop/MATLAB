function hzTest = create_HzDiff(base, test, ramp, dur, sep, fs)
%hzTest = create_HzDiff(base, test, ramp, dur, fs)
%
%Creates a stimuli of two separate tones of different frequencies as
%provided and returns them separated by a half second interlude.
%
%INPUTS:
%  base  - Primary frequency of the stimuli
%  test  - Secondary frequency of the stimuli
%  ramp  - Ramp time in seconds for the edge of the tones. Defaults to .005
%          seconds.
%  dur   - Duration of the tones. Defaults to .02 seconds.
%  sep   - Separation of tones in seconds. Defaults to .5.
%  fs    - Sampling frequency. Defaults to 48000.

if ~exist('ramp', 'var') || isempty(ramp)
    ramp = .005;
end

if ~exist('dur', 'var') || isempty(dur)
    dur = .02;
end

if ~exist('sep', 'var') || isempty(sep)
    sep = .5;
end

if ~exist('fs', 'var') || isempty(fs)
    fs = 48000;
end

%The two tones are generated by spec.
bhzwave = tone_shape(ramp, base, dur);
thzwave = tone_shape(ramp, test, dur);

breakt = zeros((fs * sep), 1);

%The signal is assembled.
temp = vertcat(breakt, bhzwave);
temp = vertcat(temp, breakt);
temp = vertcat(temp, thzwave);
temp = vertcat(temp, breakt);

%The signal is copied on to two channels and is returned.
hzTest(:,1) = temp;
hzTest(:,1) = temp;
